#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Spotless.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ServiceControFinal")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCommand(Command instance);
    partial void UpdateCommand(Command instance);
    partial void DeleteCommand(Command instance);
    partial void Insertwebpages_UsersInRole(webpages_UsersInRole instance);
    partial void Updatewebpages_UsersInRole(webpages_UsersInRole instance);
    partial void Deletewebpages_UsersInRole(webpages_UsersInRole instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomerService(CustomerService instance);
    partial void UpdateCustomerService(CustomerService instance);
    partial void DeleteCustomerService(CustomerService instance);
    partial void InsertCustomerType(CustomerType instance);
    partial void UpdateCustomerType(CustomerType instance);
    partial void DeleteCustomerType(CustomerType instance);
    partial void InsertDevice(Device instance);
    partial void UpdateDevice(Device instance);
    partial void DeleteDevice(Device instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    partial void InsertPermissionType(PermissionType instance);
    partial void UpdatePermissionType(PermissionType instance);
    partial void DeletePermissionType(PermissionType instance);
    partial void InsertSection(Section instance);
    partial void UpdateSection(Section instance);
    partial void DeleteSection(Section instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void Insertwebpages_Membership(webpages_Membership instance);
    partial void Updatewebpages_Membership(webpages_Membership instance);
    partial void Deletewebpages_Membership(webpages_Membership instance);
    partial void Insertwebpages_OAuthMembership(webpages_OAuthMembership instance);
    partial void Updatewebpages_OAuthMembership(webpages_OAuthMembership instance);
    partial void Deletewebpages_OAuthMembership(webpages_OAuthMembership instance);
    partial void Insertwebpages_Role(webpages_Role instance);
    partial void Updatewebpages_Role(webpages_Role instance);
    partial void Deletewebpages_Role(webpages_Role instance);
    partial void InsertDeviceGroup(DeviceGroup instance);
    partial void UpdateDeviceGroup(DeviceGroup instance);
    partial void DeleteDeviceGroup(DeviceGroup instance);
    partial void InsertDeviceHistory(DeviceHistory instance);
    partial void UpdateDeviceHistory(DeviceHistory instance);
    partial void DeleteDeviceHistory(DeviceHistory instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Command> Commands
		{
			get
			{
				return this.GetTable<Command>();
			}
		}
		
		public System.Data.Linq.Table<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this.GetTable<webpages_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerService> CustomerServices
		{
			get
			{
				return this.GetTable<CustomerService>();
			}
		}
		
		public System.Data.Linq.Table<CustomerType> CustomerTypes
		{
			get
			{
				return this.GetTable<CustomerType>();
			}
		}
		
		public System.Data.Linq.Table<Device> Devices
		{
			get
			{
				return this.GetTable<Device>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permissions
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<PermissionType> PermissionTypes
		{
			get
			{
				return this.GetTable<PermissionType>();
			}
		}
		
		public System.Data.Linq.Table<Section> Sections
		{
			get
			{
				return this.GetTable<Section>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfiles
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<webpages_Membership> webpages_Memberships
		{
			get
			{
				return this.GetTable<webpages_Membership>();
			}
		}
		
		public System.Data.Linq.Table<webpages_OAuthMembership> webpages_OAuthMemberships
		{
			get
			{
				return this.GetTable<webpages_OAuthMembership>();
			}
		}
		
		public System.Data.Linq.Table<webpages_Role> webpages_Roles
		{
			get
			{
				return this.GetTable<webpages_Role>();
			}
		}
		
		public System.Data.Linq.Table<DeviceGroup> DeviceGroups
		{
			get
			{
				return this.GetTable<DeviceGroup>();
			}
		}
		
		public System.Data.Linq.Table<DeviceHistory> DeviceHistories
		{
			get
			{
				return this.GetTable<DeviceHistory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Command")]
	public partial class Command : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _userId;
		
		private string _Command1;
		
		private string _slaveId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnuserIdChanging(string value);
    partial void OnuserIdChanged();
    partial void OnCommand1Changing(string value);
    partial void OnCommand1Changed();
    partial void OnslaveIdChanging(string value);
    partial void OnslaveIdChanged();
    #endregion
		
		public Command()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="NVarChar(100)")]
		public string userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Command", Storage="_Command1", DbType="NVarChar(100)")]
		public string Command1
		{
			get
			{
				return this._Command1;
			}
			set
			{
				if ((this._Command1 != value))
				{
					this.OnCommand1Changing(value);
					this.SendPropertyChanging();
					this._Command1 = value;
					this.SendPropertyChanged("Command1");
					this.OnCommand1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slaveId", DbType="NVarChar(100)")]
		public string slaveId
		{
			get
			{
				return this._slaveId;
			}
			set
			{
				if ((this._slaveId != value))
				{
					this.OnslaveIdChanging(value);
					this.SendPropertyChanging();
					this._slaveId = value;
					this.SendPropertyChanged("slaveId");
					this.OnslaveIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_UsersInRoles")]
	public partial class webpages_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _RoleId;
		
		private EntityRef<UserProfile> _UserProfile;
		
		private EntityRef<webpages_Role> _webpages_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public webpages_UsersInRole()
		{
			this._UserProfile = default(EntityRef<UserProfile>);
			this._webpages_Role = default(EntityRef<webpages_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._webpages_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_webpages_UsersInRole", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.webpages_UsersInRoles.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.webpages_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Role_webpages_UsersInRole", Storage="_webpages_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public webpages_Role webpages_Role
		{
			get
			{
				return this._webpages_Role.Entity;
			}
			set
			{
				webpages_Role previousValue = this._webpages_Role.Entity;
				if (((previousValue != value) 
							|| (this._webpages_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._webpages_Role.Entity = null;
						previousValue.webpages_UsersInRoles.Remove(this);
					}
					this._webpages_Role.Entity = value;
					if ((value != null))
					{
						value.webpages_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("webpages_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _fullName;
		
		private string _email;
		
		private string _mobile;
		
		private string _comment;
		
		private System.DateTime _dateCreated;
		
		private System.DateTime _dateModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfullNameChanging(string value);
    partial void OnfullNameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OndateCreatedChanging(System.DateTime value);
    partial void OndateCreatedChanged();
    partial void OndateModifiedChanging(System.DateTime value);
    partial void OndateModifiedChanged();
    #endregion
		
		public Contact()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string fullName
		{
			get
			{
				return this._fullName;
			}
			set
			{
				if ((this._fullName != value))
				{
					this.OnfullNameChanging(value);
					this.SendPropertyChanging();
					this._fullName = value;
					this.SendPropertyChanged("fullName");
					this.OnfullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(500)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="NVarChar(500)")]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(MAX)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateModified", DbType="DateTime NOT NULL")]
		public System.DateTime dateModified
		{
			get
			{
				return this._dateModified;
			}
			set
			{
				if ((this._dateModified != value))
				{
					this.OndateModifiedChanging(value);
					this.SendPropertyChanging();
					this._dateModified = value;
					this.SendPropertyChanged("dateModified");
					this.OndateModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _fullName;
		
		private int _typeId;
		
		private bool _isActive;
		
		private System.DateTime _dateCreated;
		
		private System.DateTime _dateModified;
		
		private int _priority;
		
		private EntitySet<CustomerService> _CustomerServices;
		
		private EntitySet<UserProfile> _UserProfiles;
		
		private EntitySet<DeviceGroup> _DeviceGroups;
		
		private EntityRef<CustomerType> _CustomerType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfullNameChanging(string value);
    partial void OnfullNameChanged();
    partial void OntypeIdChanging(int value);
    partial void OntypeIdChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    partial void OndateCreatedChanging(System.DateTime value);
    partial void OndateCreatedChanged();
    partial void OndateModifiedChanging(System.DateTime value);
    partial void OndateModifiedChanged();
    partial void OnpriorityChanging(int value);
    partial void OnpriorityChanged();
    #endregion
		
		public Customer()
		{
			this._CustomerServices = new EntitySet<CustomerService>(new Action<CustomerService>(this.attach_CustomerServices), new Action<CustomerService>(this.detach_CustomerServices));
			this._UserProfiles = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfiles), new Action<UserProfile>(this.detach_UserProfiles));
			this._DeviceGroups = new EntitySet<DeviceGroup>(new Action<DeviceGroup>(this.attach_DeviceGroups), new Action<DeviceGroup>(this.detach_DeviceGroups));
			this._CustomerType = default(EntityRef<CustomerType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string fullName
		{
			get
			{
				return this._fullName;
			}
			set
			{
				if ((this._fullName != value))
				{
					this.OnfullNameChanging(value);
					this.SendPropertyChanging();
					this._fullName = value;
					this.SendPropertyChanged("fullName");
					this.OnfullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="Int NOT NULL")]
		public int typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					if (this._CustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("typeId");
					this.OntypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateModified", DbType="DateTime NOT NULL")]
		public System.DateTime dateModified
		{
			get
			{
				return this._dateModified;
			}
			set
			{
				if ((this._dateModified != value))
				{
					this.OndateModifiedChanging(value);
					this.SendPropertyChanging();
					this._dateModified = value;
					this.SendPropertyChanged("dateModified");
					this.OndateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="Int NOT NULL")]
		public int priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerService", Storage="_CustomerServices", ThisKey="id", OtherKey="customerId")]
		public EntitySet<CustomerService> CustomerServices
		{
			get
			{
				return this._CustomerServices;
			}
			set
			{
				this._CustomerServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_UserProfile", Storage="_UserProfiles", ThisKey="id", OtherKey="customerId")]
		public EntitySet<UserProfile> UserProfiles
		{
			get
			{
				return this._UserProfiles;
			}
			set
			{
				this._UserProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_DeviceGroup", Storage="_DeviceGroups", ThisKey="id", OtherKey="customerId")]
		public EntitySet<DeviceGroup> DeviceGroups
		{
			get
			{
				return this._DeviceGroups;
			}
			set
			{
				this._DeviceGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_Customer", Storage="_CustomerType", ThisKey="typeId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CustomerType CustomerType
		{
			get
			{
				return this._CustomerType.Entity;
			}
			set
			{
				CustomerType previousValue = this._CustomerType.Entity;
				if (((previousValue != value) 
							|| (this._CustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerType.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._CustomerType.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._typeId = value.id;
					}
					else
					{
						this._typeId = default(int);
					}
					this.SendPropertyChanged("CustomerType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerServices(CustomerService entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerServices(CustomerService entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_DeviceGroups(DeviceGroup entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_DeviceGroups(DeviceGroup entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerService")]
	public partial class CustomerService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customerId;
		
		private int _serviceId;
		
		private System.DateTime _dateCreated;
		
		private System.DateTime _dateModified;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomerIdChanging(int value);
    partial void OncustomerIdChanged();
    partial void OnserviceIdChanging(int value);
    partial void OnserviceIdChanged();
    partial void OndateCreatedChanging(System.DateTime value);
    partial void OndateCreatedChanged();
    partial void OndateModifiedChanging(System.DateTime value);
    partial void OndateModifiedChanged();
    #endregion
		
		public CustomerService()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="Int NOT NULL")]
		public int customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceId", DbType="Int NOT NULL")]
		public int serviceId
		{
			get
			{
				return this._serviceId;
			}
			set
			{
				if ((this._serviceId != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceIdChanging(value);
					this.SendPropertyChanging();
					this._serviceId = value;
					this.SendPropertyChanged("serviceId");
					this.OnserviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateModified", DbType="DateTime NOT NULL")]
		public System.DateTime dateModified
		{
			get
			{
				return this._dateModified;
			}
			set
			{
				if ((this._dateModified != value))
				{
					this.OndateModifiedChanging(value);
					this.SendPropertyChanging();
					this._dateModified = value;
					this.SendPropertyChanged("dateModified");
					this.OndateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerService", Storage="_Customer", ThisKey="customerId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerServices.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerServices.Add(this);
						this._customerId = value.id;
					}
					else
					{
						this._customerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_CustomerService", Storage="_Service", ThisKey="serviceId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.CustomerServices.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.CustomerServices.Add(this);
						this._serviceId = value.id;
					}
					else
					{
						this._serviceId = default(int);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerType")]
	public partial class CustomerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.DateTime _dateCreated;
		
		private System.DateTime _dateModified;
		
		private int _priority;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndateCreatedChanging(System.DateTime value);
    partial void OndateCreatedChanged();
    partial void OndateModifiedChanging(System.DateTime value);
    partial void OndateModifiedChanged();
    partial void OnpriorityChanging(int value);
    partial void OnpriorityChanged();
    #endregion
		
		public CustomerType()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateModified", DbType="DateTime NOT NULL")]
		public System.DateTime dateModified
		{
			get
			{
				return this._dateModified;
			}
			set
			{
				if ((this._dateModified != value))
				{
					this.OndateModifiedChanging(value);
					this.SendPropertyChanging();
					this._dateModified = value;
					this.SendPropertyChanged("dateModified");
					this.OndateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="Int NOT NULL")]
		public int priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_Customer", Storage="_Customers", ThisKey="id", OtherKey="typeId")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Devices")]
	public partial class Device : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _DeviceName;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<double> _Latitude;
		
		private string _Image;
		
		private System.Nullable<bool> _isActive;
		
		private bool _isMonitored;
		
		private int _deviceGroupId;
		
		private int _deviceId;
		
		private bool _isConnected;
		
		private EntitySet<DeviceHistory> _DeviceHistories;
		
		private EntityRef<DeviceGroup> _DeviceGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnisActiveChanging(System.Nullable<bool> value);
    partial void OnisActiveChanged();
    partial void OnisMonitoredChanging(bool value);
    partial void OnisMonitoredChanged();
    partial void OndeviceGroupIdChanging(int value);
    partial void OndeviceGroupIdChanged();
    partial void OndeviceIdChanging(int value);
    partial void OndeviceIdChanged();
    partial void OnisConnectedChanging(bool value);
    partial void OnisConnectedChanged();
    #endregion
		
		public Device()
		{
			this._DeviceHistories = new EntitySet<DeviceHistory>(new Action<DeviceHistory>(this.attach_DeviceHistories), new Action<DeviceHistory>(this.detach_DeviceHistories));
			this._DeviceGroup = default(EntityRef<DeviceGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(300)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(200)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit")]
		public System.Nullable<bool> isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isMonitored", DbType="Bit NOT NULL")]
		public bool isMonitored
		{
			get
			{
				return this._isMonitored;
			}
			set
			{
				if ((this._isMonitored != value))
				{
					this.OnisMonitoredChanging(value);
					this.SendPropertyChanging();
					this._isMonitored = value;
					this.SendPropertyChanged("isMonitored");
					this.OnisMonitoredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceGroupId")]
		public int deviceGroupId
		{
			get
			{
				return this._deviceGroupId;
			}
			set
			{
				if ((this._deviceGroupId != value))
				{
					if (this._DeviceGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndeviceGroupIdChanging(value);
					this.SendPropertyChanging();
					this._deviceGroupId = value;
					this.SendPropertyChanged("deviceGroupId");
					this.OndeviceGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceId", DbType="Int")]
		public int deviceId
		{
			get
			{
				return this._deviceId;
			}
			set
			{
				if ((this._deviceId != value))
				{
					this.OndeviceIdChanging(value);
					this.SendPropertyChanging();
					this._deviceId = value;
					this.SendPropertyChanged("deviceId");
					this.OndeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isConnected")]
		public bool isConnected
		{
			get
			{
				return this._isConnected;
			}
			set
			{
				if ((this._isConnected != value))
				{
					this.OnisConnectedChanging(value);
					this.SendPropertyChanging();
					this._isConnected = value;
					this.SendPropertyChanged("isConnected");
					this.OnisConnectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_DeviceHistory", Storage="_DeviceHistories", ThisKey="id", OtherKey="deviceId")]
		public EntitySet<DeviceHistory> DeviceHistories
		{
			get
			{
				return this._DeviceHistories;
			}
			set
			{
				this._DeviceHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceGroup_Device", Storage="_DeviceGroup", ThisKey="deviceGroupId", OtherKey="id", IsForeignKey=true)]
		public DeviceGroup DeviceGroup
		{
			get
			{
				return this._DeviceGroup.Entity;
			}
			set
			{
				DeviceGroup previousValue = this._DeviceGroup.Entity;
				if (((previousValue != value) 
							|| (this._DeviceGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeviceGroup.Entity = null;
						previousValue.Devices.Remove(this);
					}
					this._DeviceGroup.Entity = value;
					if ((value != null))
					{
						value.Devices.Add(this);
						this._deviceGroupId = value.id;
					}
					else
					{
						this._deviceGroupId = default(int);
					}
					this.SendPropertyChanged("DeviceGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeviceHistories(DeviceHistory entity)
		{
			this.SendPropertyChanging();
			entity.Device = this;
		}
		
		private void detach_DeviceHistories(DeviceHistory entity)
		{
			this.SendPropertyChanging();
			entity.Device = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permission")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _roleId;
		
		private int _sectionId;
		
		private int _permissionTypeId;
		
		private System.DateTime _dateCreated;
		
		private EntityRef<PermissionType> _PermissionType;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<webpages_Role> _webpages_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnroleIdChanging(int value);
    partial void OnroleIdChanged();
    partial void OnsectionIdChanging(int value);
    partial void OnsectionIdChanged();
    partial void OnpermissionTypeIdChanging(int value);
    partial void OnpermissionTypeIdChanged();
    partial void OndateCreatedChanging(System.DateTime value);
    partial void OndateCreatedChanged();
    #endregion
		
		public Permission()
		{
			this._PermissionType = default(EntityRef<PermissionType>);
			this._Section = default(EntityRef<Section>);
			this._webpages_Role = default(EntityRef<webpages_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int roleId
		{
			get
			{
				return this._roleId;
			}
			set
			{
				if ((this._roleId != value))
				{
					if (this._webpages_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroleIdChanging(value);
					this.SendPropertyChanging();
					this._roleId = value;
					this.SendPropertyChanged("roleId");
					this.OnroleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sectionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int sectionId
		{
			get
			{
				return this._sectionId;
			}
			set
			{
				if ((this._sectionId != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsectionIdChanging(value);
					this.SendPropertyChanging();
					this._sectionId = value;
					this.SendPropertyChanged("sectionId");
					this.OnsectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int permissionTypeId
		{
			get
			{
				return this._permissionTypeId;
			}
			set
			{
				if ((this._permissionTypeId != value))
				{
					if (this._PermissionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpermissionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._permissionTypeId = value;
					this.SendPropertyChanged("permissionTypeId");
					this.OnpermissionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionType_Permission", Storage="_PermissionType", ThisKey="permissionTypeId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PermissionType PermissionType
		{
			get
			{
				return this._PermissionType.Entity;
			}
			set
			{
				PermissionType previousValue = this._PermissionType.Entity;
				if (((previousValue != value) 
							|| (this._PermissionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PermissionType.Entity = null;
						previousValue.Permissions.Remove(this);
					}
					this._PermissionType.Entity = value;
					if ((value != null))
					{
						value.Permissions.Add(this);
						this._permissionTypeId = value.id;
					}
					else
					{
						this._permissionTypeId = default(int);
					}
					this.SendPropertyChanged("PermissionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Permission", Storage="_Section", ThisKey="sectionId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.Permissions.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.Permissions.Add(this);
						this._sectionId = value.id;
					}
					else
					{
						this._sectionId = default(int);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Role_Permission", Storage="_webpages_Role", ThisKey="roleId", OtherKey="RoleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public webpages_Role webpages_Role
		{
			get
			{
				return this._webpages_Role.Entity;
			}
			set
			{
				webpages_Role previousValue = this._webpages_Role.Entity;
				if (((previousValue != value) 
							|| (this._webpages_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._webpages_Role.Entity = null;
						previousValue.Permissions.Remove(this);
					}
					this._webpages_Role.Entity = value;
					if ((value != null))
					{
						value.Permissions.Add(this);
						this._roleId = value.RoleId;
					}
					else
					{
						this._roleId = default(int);
					}
					this.SendPropertyChanged("webpages_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PermissionType")]
	public partial class PermissionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _computername;
		
		private System.DateTime _dateCreated;
		
		private System.DateTime _dateModified;
		
		private EntitySet<Permission> _Permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncomputernameChanging(string value);
    partial void OncomputernameChanged();
    partial void OndateCreatedChanging(System.DateTime value);
    partial void OndateCreatedChanged();
    partial void OndateModifiedChanging(System.DateTime value);
    partial void OndateModifiedChanged();
    #endregion
		
		public PermissionType()
		{
			this._Permissions = new EntitySet<Permission>(new Action<Permission>(this.attach_Permissions), new Action<Permission>(this.detach_Permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computername", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string computername
		{
			get
			{
				return this._computername;
			}
			set
			{
				if ((this._computername != value))
				{
					this.OncomputernameChanging(value);
					this.SendPropertyChanging();
					this._computername = value;
					this.SendPropertyChanged("computername");
					this.OncomputernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateModified", DbType="DateTime NOT NULL")]
		public System.DateTime dateModified
		{
			get
			{
				return this._dateModified;
			}
			set
			{
				if ((this._dateModified != value))
				{
					this.OndateModifiedChanging(value);
					this.SendPropertyChanging();
					this._dateModified = value;
					this.SendPropertyChanged("dateModified");
					this.OndateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionType_Permission", Storage="_Permissions", ThisKey="id", OtherKey="permissionTypeId")]
		public EntitySet<Permission> Permissions
		{
			get
			{
				return this._Permissions;
			}
			set
			{
				this._Permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Permissions(Permission entity)
		{
			this.SendPropertyChanging();
			entity.PermissionType = this;
		}
		
		private void detach_Permissions(Permission entity)
		{
			this.SendPropertyChanging();
			entity.PermissionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Section")]
	public partial class Section : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _computername;
		
		private string _title;
		
		private bool _isSortable;
		
		private bool _showOnMenu;
		
		private bool _isPublishable;
		
		private System.DateTime _dateCreated;
		
		private System.DateTime _dateModified;
		
		private int _priority;
		
		private string _navicon;
		
		private EntitySet<Permission> _Permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncomputernameChanging(string value);
    partial void OncomputernameChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnisSortableChanging(bool value);
    partial void OnisSortableChanged();
    partial void OnshowOnMenuChanging(bool value);
    partial void OnshowOnMenuChanged();
    partial void OnisPublishableChanging(bool value);
    partial void OnisPublishableChanged();
    partial void OndateCreatedChanging(System.DateTime value);
    partial void OndateCreatedChanged();
    partial void OndateModifiedChanging(System.DateTime value);
    partial void OndateModifiedChanged();
    partial void OnpriorityChanging(int value);
    partial void OnpriorityChanged();
    partial void OnnaviconChanging(string value);
    partial void OnnaviconChanged();
    #endregion
		
		public Section()
		{
			this._Permissions = new EntitySet<Permission>(new Action<Permission>(this.attach_Permissions), new Action<Permission>(this.detach_Permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_computername", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string computername
		{
			get
			{
				return this._computername;
			}
			set
			{
				if ((this._computername != value))
				{
					this.OncomputernameChanging(value);
					this.SendPropertyChanging();
					this._computername = value;
					this.SendPropertyChanged("computername");
					this.OncomputernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSortable", DbType="Bit NOT NULL")]
		public bool isSortable
		{
			get
			{
				return this._isSortable;
			}
			set
			{
				if ((this._isSortable != value))
				{
					this.OnisSortableChanging(value);
					this.SendPropertyChanging();
					this._isSortable = value;
					this.SendPropertyChanged("isSortable");
					this.OnisSortableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showOnMenu", DbType="Bit NOT NULL")]
		public bool showOnMenu
		{
			get
			{
				return this._showOnMenu;
			}
			set
			{
				if ((this._showOnMenu != value))
				{
					this.OnshowOnMenuChanging(value);
					this.SendPropertyChanging();
					this._showOnMenu = value;
					this.SendPropertyChanged("showOnMenu");
					this.OnshowOnMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPublishable", DbType="Bit NOT NULL")]
		public bool isPublishable
		{
			get
			{
				return this._isPublishable;
			}
			set
			{
				if ((this._isPublishable != value))
				{
					this.OnisPublishableChanging(value);
					this.SendPropertyChanging();
					this._isPublishable = value;
					this.SendPropertyChanged("isPublishable");
					this.OnisPublishableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateModified", DbType="DateTime NOT NULL")]
		public System.DateTime dateModified
		{
			get
			{
				return this._dateModified;
			}
			set
			{
				if ((this._dateModified != value))
				{
					this.OndateModifiedChanging(value);
					this.SendPropertyChanging();
					this._dateModified = value;
					this.SendPropertyChanged("dateModified");
					this.OndateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="Int NOT NULL")]
		public int priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_navicon", DbType="NVarChar(100)")]
		public string navicon
		{
			get
			{
				return this._navicon;
			}
			set
			{
				if ((this._navicon != value))
				{
					this.OnnaviconChanging(value);
					this.SendPropertyChanging();
					this._navicon = value;
					this.SendPropertyChanged("navicon");
					this.OnnaviconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Permission", Storage="_Permissions", ThisKey="id", OtherKey="sectionId")]
		public EntitySet<Permission> Permissions
		{
			get
			{
				return this._Permissions;
			}
			set
			{
				this._Permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Permissions(Permission entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_Permissions(Permission entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _description;
		
		private int _priority;
		
		private System.DateTime _dateCreated;
		
		private System.DateTime _dateModified;
		
		private string _comPort;
		
		private string _baudRate;
		
		private string _dataBit;
		
		private string _parity;
		
		private string _stopBit;
		
		private EntitySet<CustomerService> _CustomerServices;
		
		private EntitySet<DeviceGroup> _DeviceGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriorityChanging(int value);
    partial void OnpriorityChanged();
    partial void OndateCreatedChanging(System.DateTime value);
    partial void OndateCreatedChanged();
    partial void OndateModifiedChanging(System.DateTime value);
    partial void OndateModifiedChanged();
    partial void OncomPortChanging(string value);
    partial void OncomPortChanged();
    partial void OnbaudRateChanging(string value);
    partial void OnbaudRateChanged();
    partial void OndataBitChanging(string value);
    partial void OndataBitChanged();
    partial void OnparityChanging(string value);
    partial void OnparityChanged();
    partial void OnstopBitChanging(string value);
    partial void OnstopBitChanged();
    #endregion
		
		public Service()
		{
			this._CustomerServices = new EntitySet<CustomerService>(new Action<CustomerService>(this.attach_CustomerServices), new Action<CustomerService>(this.detach_CustomerServices));
			this._DeviceGroups = new EntitySet<DeviceGroup>(new Action<DeviceGroup>(this.attach_DeviceGroups), new Action<DeviceGroup>(this.detach_DeviceGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="Int NOT NULL")]
		public int priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateModified", DbType="DateTime NOT NULL")]
		public System.DateTime dateModified
		{
			get
			{
				return this._dateModified;
			}
			set
			{
				if ((this._dateModified != value))
				{
					this.OndateModifiedChanging(value);
					this.SendPropertyChanging();
					this._dateModified = value;
					this.SendPropertyChanged("dateModified");
					this.OndateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comPort", DbType="NVarChar(50)")]
		public string comPort
		{
			get
			{
				return this._comPort;
			}
			set
			{
				if ((this._comPort != value))
				{
					this.OncomPortChanging(value);
					this.SendPropertyChanging();
					this._comPort = value;
					this.SendPropertyChanged("comPort");
					this.OncomPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baudRate", DbType="NVarChar(50)")]
		public string baudRate
		{
			get
			{
				return this._baudRate;
			}
			set
			{
				if ((this._baudRate != value))
				{
					this.OnbaudRateChanging(value);
					this.SendPropertyChanging();
					this._baudRate = value;
					this.SendPropertyChanged("baudRate");
					this.OnbaudRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataBit", DbType="NVarChar(50)")]
		public string dataBit
		{
			get
			{
				return this._dataBit;
			}
			set
			{
				if ((this._dataBit != value))
				{
					this.OndataBitChanging(value);
					this.SendPropertyChanging();
					this._dataBit = value;
					this.SendPropertyChanged("dataBit");
					this.OndataBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parity", DbType="NVarChar(50)")]
		public string parity
		{
			get
			{
				return this._parity;
			}
			set
			{
				if ((this._parity != value))
				{
					this.OnparityChanging(value);
					this.SendPropertyChanging();
					this._parity = value;
					this.SendPropertyChanged("parity");
					this.OnparityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stopBit", DbType="NVarChar(50)")]
		public string stopBit
		{
			get
			{
				return this._stopBit;
			}
			set
			{
				if ((this._stopBit != value))
				{
					this.OnstopBitChanging(value);
					this.SendPropertyChanging();
					this._stopBit = value;
					this.SendPropertyChanged("stopBit");
					this.OnstopBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_CustomerService", Storage="_CustomerServices", ThisKey="id", OtherKey="serviceId")]
		public EntitySet<CustomerService> CustomerServices
		{
			get
			{
				return this._CustomerServices;
			}
			set
			{
				this._CustomerServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DeviceGroup", Storage="_DeviceGroups", ThisKey="id", OtherKey="serviceId")]
		public EntitySet<DeviceGroup> DeviceGroups
		{
			get
			{
				return this._DeviceGroups;
			}
			set
			{
				this._DeviceGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerServices(CustomerService entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_CustomerServices(CustomerService entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_DeviceGroups(DeviceGroup entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_DeviceGroups(DeviceGroup entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfile")]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserName;
		
		private System.Nullable<int> _customerId;
		
		private string _customername;
		
		private EntitySet<webpages_UsersInRole> _webpages_UsersInRoles;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OncustomerIdChanging(System.Nullable<int> value);
    partial void OncustomerIdChanged();
    partial void OncustomernameChanging(string value);
    partial void OncustomernameChanged();
    #endregion
		
		public UserProfile()
		{
			this._webpages_UsersInRoles = new EntitySet<webpages_UsersInRole>(new Action<webpages_UsersInRole>(this.attach_webpages_UsersInRoles), new Action<webpages_UsersInRole>(this.detach_webpages_UsersInRoles));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(56) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="Int")]
		public System.Nullable<int> customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customername", DbType="NVarChar(500)")]
		public string customername
		{
			get
			{
				return this._customername;
			}
			set
			{
				if ((this._customername != value))
				{
					this.OncustomernameChanging(value);
					this.SendPropertyChanging();
					this._customername = value;
					this.SendPropertyChanged("customername");
					this.OncustomernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_webpages_UsersInRole", Storage="_webpages_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this._webpages_UsersInRoles;
			}
			set
			{
				this._webpages_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_UserProfile", Storage="_Customer", ThisKey="customerId", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.UserProfiles.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.UserProfiles.Add(this);
						this._customerId = value.id;
					}
					else
					{
						this._customerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_Membership")]
	public partial class webpages_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _ConfirmationToken;
		
		private System.Nullable<bool> _IsConfirmed;
		
		private System.Nullable<System.DateTime> _LastPasswordFailureDate;
		
		private int _PasswordFailuresSinceLastSuccess;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _PasswordChangedDate;
		
		private string _PasswordSalt;
		
		private string _PasswordVerificationToken;
		
		private System.Nullable<System.DateTime> _PasswordVerificationTokenExpirationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnConfirmationTokenChanging(string value);
    partial void OnConfirmationTokenChanged();
    partial void OnIsConfirmedChanging(System.Nullable<bool> value);
    partial void OnIsConfirmedChanged();
    partial void OnLastPasswordFailureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordFailureDateChanged();
    partial void OnPasswordFailuresSinceLastSuccessChanging(int value);
    partial void OnPasswordFailuresSinceLastSuccessChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordChangedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordChangedDateChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnPasswordVerificationTokenChanging(string value);
    partial void OnPasswordVerificationTokenChanged();
    partial void OnPasswordVerificationTokenExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordVerificationTokenExpirationDateChanged();
    #endregion
		
		public webpages_Membership()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationToken", DbType="NVarChar(128)")]
		public string ConfirmationToken
		{
			get
			{
				return this._ConfirmationToken;
			}
			set
			{
				if ((this._ConfirmationToken != value))
				{
					this.OnConfirmationTokenChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationToken = value;
					this.SendPropertyChanged("ConfirmationToken");
					this.OnConfirmationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordFailureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPasswordFailureDate
		{
			get
			{
				return this._LastPasswordFailureDate;
			}
			set
			{
				if ((this._LastPasswordFailureDate != value))
				{
					this.OnLastPasswordFailureDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordFailureDate = value;
					this.SendPropertyChanged("LastPasswordFailureDate");
					this.OnLastPasswordFailureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFailuresSinceLastSuccess", DbType="Int NOT NULL")]
		public int PasswordFailuresSinceLastSuccess
		{
			get
			{
				return this._PasswordFailuresSinceLastSuccess;
			}
			set
			{
				if ((this._PasswordFailuresSinceLastSuccess != value))
				{
					this.OnPasswordFailuresSinceLastSuccessChanging(value);
					this.SendPropertyChanging();
					this._PasswordFailuresSinceLastSuccess = value;
					this.SendPropertyChanged("PasswordFailuresSinceLastSuccess");
					this.OnPasswordFailuresSinceLastSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordChangedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordChangedDate
		{
			get
			{
				return this._PasswordChangedDate;
			}
			set
			{
				if ((this._PasswordChangedDate != value))
				{
					this.OnPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordChangedDate = value;
					this.SendPropertyChanged("PasswordChangedDate");
					this.OnPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationToken", DbType="NVarChar(128)")]
		public string PasswordVerificationToken
		{
			get
			{
				return this._PasswordVerificationToken;
			}
			set
			{
				if ((this._PasswordVerificationToken != value))
				{
					this.OnPasswordVerificationTokenChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationToken = value;
					this.SendPropertyChanged("PasswordVerificationToken");
					this.OnPasswordVerificationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationTokenExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordVerificationTokenExpirationDate
		{
			get
			{
				return this._PasswordVerificationTokenExpirationDate;
			}
			set
			{
				if ((this._PasswordVerificationTokenExpirationDate != value))
				{
					this.OnPasswordVerificationTokenExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationTokenExpirationDate = value;
					this.SendPropertyChanged("PasswordVerificationTokenExpirationDate");
					this.OnPasswordVerificationTokenExpirationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_OAuthMembership")]
	public partial class webpages_OAuthMembership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Provider;
		
		private string _ProviderUserId;
		
		private int _UserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProviderChanging(string value);
    partial void OnProviderChanged();
    partial void OnProviderUserIdChanging(string value);
    partial void OnProviderUserIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public webpages_OAuthMembership()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					this.OnProviderChanging(value);
					this.SendPropertyChanging();
					this._Provider = value;
					this.SendPropertyChanged("Provider");
					this.OnProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderUserId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderUserId
		{
			get
			{
				return this._ProviderUserId;
			}
			set
			{
				if ((this._ProviderUserId != value))
				{
					this.OnProviderUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderUserId = value;
					this.SendPropertyChanged("ProviderUserId");
					this.OnProviderUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_Roles")]
	public partial class webpages_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _RoleName;
		
		private EntitySet<webpages_UsersInRole> _webpages_UsersInRoles;
		
		private EntitySet<Permission> _Permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public webpages_Role()
		{
			this._webpages_UsersInRoles = new EntitySet<webpages_UsersInRole>(new Action<webpages_UsersInRole>(this.attach_webpages_UsersInRoles), new Action<webpages_UsersInRole>(this.detach_webpages_UsersInRoles));
			this._Permissions = new EntitySet<Permission>(new Action<Permission>(this.attach_Permissions), new Action<Permission>(this.detach_Permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Role_webpages_UsersInRole", Storage="_webpages_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this._webpages_UsersInRoles;
			}
			set
			{
				this._webpages_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Role_Permission", Storage="_Permissions", ThisKey="RoleId", OtherKey="roleId")]
		public EntitySet<Permission> Permissions
		{
			get
			{
				return this._Permissions;
			}
			set
			{
				this._Permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Role = this;
		}
		
		private void detach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Role = null;
		}
		
		private void attach_Permissions(Permission entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Role = this;
		}
		
		private void detach_Permissions(Permission entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceGroup")]
	public partial class DeviceGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<double> _Latitude;
		
		private string _comPort;
		
		private int _serviceId;
		
		private int _customerId;
		
		private string _address;
		
		private string _StaticIP;
		
		private string _Macaddress;
		
		private EntitySet<Device> _Devices;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OncomPortChanging(string value);
    partial void OncomPortChanged();
    partial void OnserviceIdChanging(int value);
    partial void OnserviceIdChanged();
    partial void OncustomerIdChanging(int value);
    partial void OncustomerIdChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnStaticIPChanging(string value);
    partial void OnStaticIPChanged();
    partial void OnMacaddressChanging(string value);
    partial void OnMacaddressChanged();
    #endregion
		
		public DeviceGroup()
		{
			this._Devices = new EntitySet<Device>(new Action<Device>(this.attach_Devices), new Action<Device>(this.detach_Devices));
			this._Customer = default(EntityRef<Customer>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comPort", DbType="NVarChar(50)")]
		public string comPort
		{
			get
			{
				return this._comPort;
			}
			set
			{
				if ((this._comPort != value))
				{
					this.OncomPortChanging(value);
					this.SendPropertyChanging();
					this._comPort = value;
					this.SendPropertyChanged("comPort");
					this.OncomPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceId", DbType="Int NOT NULL")]
		public int serviceId
		{
			get
			{
				return this._serviceId;
			}
			set
			{
				if ((this._serviceId != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceIdChanging(value);
					this.SendPropertyChanging();
					this._serviceId = value;
					this.SendPropertyChanged("serviceId");
					this.OnserviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="Int NOT NULL")]
		public int customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(MAX)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticIP", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StaticIP
		{
			get
			{
				return this._StaticIP;
			}
			set
			{
				if ((this._StaticIP != value))
				{
					this.OnStaticIPChanging(value);
					this.SendPropertyChanging();
					this._StaticIP = value;
					this.SendPropertyChanged("StaticIP");
					this.OnStaticIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Macaddress", DbType="NVarChar(50)")]
		public string Macaddress
		{
			get
			{
				return this._Macaddress;
			}
			set
			{
				if ((this._Macaddress != value))
				{
					this.OnMacaddressChanging(value);
					this.SendPropertyChanging();
					this._Macaddress = value;
					this.SendPropertyChanged("Macaddress");
					this.OnMacaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceGroup_Device", Storage="_Devices", ThisKey="id", OtherKey="deviceGroupId")]
		public EntitySet<Device> Devices
		{
			get
			{
				return this._Devices;
			}
			set
			{
				this._Devices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_DeviceGroup", Storage="_Customer", ThisKey="customerId", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.DeviceGroups.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.DeviceGroups.Add(this);
						this._customerId = value.id;
					}
					else
					{
						this._customerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DeviceGroup", Storage="_Service", ThisKey="serviceId", OtherKey="id", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DeviceGroups.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DeviceGroups.Add(this);
						this._serviceId = value.id;
					}
					else
					{
						this._serviceId = default(int);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Devices(Device entity)
		{
			this.SendPropertyChanging();
			entity.DeviceGroup = this;
		}
		
		private void detach_Devices(Device entity)
		{
			this.SendPropertyChanging();
			entity.DeviceGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceHistory")]
	public partial class DeviceHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _deviceNumber;
		
		private int _deviceId;
		
		private System.Nullable<decimal> _PVVoltage;
		
		private System.Nullable<decimal> _PVCurrent;
		
		private System.Nullable<decimal> _PVPowerL;
		
		private System.Nullable<decimal> _PVPowerH;
		
		private System.Nullable<decimal> _BAVoltage;
		
		private System.Nullable<decimal> _BACurrent;
		
		private System.Nullable<decimal> _Reserve;
		
		private System.Nullable<decimal> _Reserve1;
		
		private System.Nullable<decimal> _ACVoltage;
		
		private System.Nullable<decimal> _ACCurrent;
		
		private System.Nullable<decimal> _ACPowerL;
		
		private System.Nullable<decimal> _ACPowerH;
		
		private System.Nullable<decimal> _LEDLoadVoltage;
		
		private System.Nullable<decimal> _LEDLoadCurrent;
		
		private System.Nullable<decimal> _LEDLoadPowerL;
		
		private System.Nullable<decimal> _LEDLoadPowerH;
		
		private System.Nullable<decimal> _Load1Voltage;
		
		private System.Nullable<decimal> _Load1Current;
		
		private System.Nullable<decimal> _Load1PowerL;
		
		private System.Nullable<decimal> _Load1PowerH;
		
		private System.Nullable<decimal> _Load2Voltage;
		
		private System.Nullable<decimal> _Load2Current;
		
		private System.Nullable<decimal> _Load2PowerL;
		
		private System.Nullable<decimal> _Load2PowerH;
		
		private System.Nullable<decimal> _Load3Voltage;
		
		private System.Nullable<decimal> _Load3Current;
		
		private System.Nullable<decimal> _Load3PowerL;
		
		private System.Nullable<decimal> _Load3PowerH;
		
		private System.Nullable<decimal> _BatteryTemp;
		
		private System.Nullable<decimal> _ControllerTemp;
		
		private System.Nullable<decimal> _Reserve2;
		
		private System.Nullable<decimal> _BatterySOC;
		
		private System.Nullable<decimal> _MaximumInputVoltageOfPVOfDay;
		
		private System.Nullable<decimal> _MinimumInputVoltageOfPVOfDay;
		
		private System.Nullable<decimal> _MaximumBatteryVoltageOfDay;
		
		private System.Nullable<decimal> _MinimumBatteryVoltageOfDay;
		
		private System.Nullable<decimal> _TotalPowerConsumptionOfDayL;
		
		private System.Nullable<decimal> _TotalPowerConsumptionOfDayH;
		
		private System.Nullable<decimal> _TotalPowerConsumptionOfMonthL;
		
		private System.Nullable<decimal> _TotalPowerConsumptionOfMonthH;
		
		private System.Nullable<decimal> _TotalPowerConsumptionOfYearL;
		
		private System.Nullable<decimal> _TotalPowerConsumptionOfYearH;
		
		private System.Nullable<decimal> _TotalPowerConsumptionL;
		
		private System.Nullable<decimal> _TotalPowerConsumptionH;
		
		private System.Nullable<decimal> _TotalPowerGenerationOfDayL;
		
		private System.Nullable<decimal> _TotalPowerGenerationOfDayH;
		
		private System.Nullable<decimal> _TotalPowerGenerationOfMonthL;
		
		private System.Nullable<decimal> _TotalPowerGenerationOfMonthH;
		
		private System.Nullable<decimal> _TotalPowerGenerationOfYearL;
		
		private System.Nullable<decimal> _TotalPowerGenerationOfYearH;
		
		private System.Nullable<decimal> _TotalPowerGenerationL;
		
		private System.Nullable<decimal> _TotalPowerGenerationH;
		
		private System.Nullable<System.DateTime> _insertDateTime;
		
		private EntityRef<Device> _Device;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OndeviceNumberChanging(int value);
    partial void OndeviceNumberChanged();
    partial void OndeviceIdChanging(int value);
    partial void OndeviceIdChanged();
    partial void OnPVVoltageChanging(System.Nullable<decimal> value);
    partial void OnPVVoltageChanged();
    partial void OnPVCurrentChanging(System.Nullable<decimal> value);
    partial void OnPVCurrentChanged();
    partial void OnPVPowerLChanging(System.Nullable<decimal> value);
    partial void OnPVPowerLChanged();
    partial void OnPVPowerHChanging(System.Nullable<decimal> value);
    partial void OnPVPowerHChanged();
    partial void OnBAVoltageChanging(System.Nullable<decimal> value);
    partial void OnBAVoltageChanged();
    partial void OnBACurrentChanging(System.Nullable<decimal> value);
    partial void OnBACurrentChanged();
    partial void OnReserveChanging(System.Nullable<decimal> value);
    partial void OnReserveChanged();
    partial void OnReserve1Changing(System.Nullable<decimal> value);
    partial void OnReserve1Changed();
    partial void OnACVoltageChanging(System.Nullable<decimal> value);
    partial void OnACVoltageChanged();
    partial void OnACCurrentChanging(System.Nullable<decimal> value);
    partial void OnACCurrentChanged();
    partial void OnACPowerLChanging(System.Nullable<decimal> value);
    partial void OnACPowerLChanged();
    partial void OnACPowerHChanging(System.Nullable<decimal> value);
    partial void OnACPowerHChanged();
    partial void OnLEDLoadVoltageChanging(System.Nullable<decimal> value);
    partial void OnLEDLoadVoltageChanged();
    partial void OnLEDLoadCurrentChanging(System.Nullable<decimal> value);
    partial void OnLEDLoadCurrentChanged();
    partial void OnLEDLoadPowerLChanging(System.Nullable<decimal> value);
    partial void OnLEDLoadPowerLChanged();
    partial void OnLEDLoadPowerHChanging(System.Nullable<decimal> value);
    partial void OnLEDLoadPowerHChanged();
    partial void OnLoad1VoltageChanging(System.Nullable<decimal> value);
    partial void OnLoad1VoltageChanged();
    partial void OnLoad1CurrentChanging(System.Nullable<decimal> value);
    partial void OnLoad1CurrentChanged();
    partial void OnLoad1PowerLChanging(System.Nullable<decimal> value);
    partial void OnLoad1PowerLChanged();
    partial void OnLoad1PowerHChanging(System.Nullable<decimal> value);
    partial void OnLoad1PowerHChanged();
    partial void OnLoad2VoltageChanging(System.Nullable<decimal> value);
    partial void OnLoad2VoltageChanged();
    partial void OnLoad2CurrentChanging(System.Nullable<decimal> value);
    partial void OnLoad2CurrentChanged();
    partial void OnLoad2PowerLChanging(System.Nullable<decimal> value);
    partial void OnLoad2PowerLChanged();
    partial void OnLoad2PowerHChanging(System.Nullable<decimal> value);
    partial void OnLoad2PowerHChanged();
    partial void OnLoad3VoltageChanging(System.Nullable<decimal> value);
    partial void OnLoad3VoltageChanged();
    partial void OnLoad3CurrentChanging(System.Nullable<decimal> value);
    partial void OnLoad3CurrentChanged();
    partial void OnLoad3PowerLChanging(System.Nullable<decimal> value);
    partial void OnLoad3PowerLChanged();
    partial void OnLoad3PowerHChanging(System.Nullable<decimal> value);
    partial void OnLoad3PowerHChanged();
    partial void OnBatteryTempChanging(System.Nullable<decimal> value);
    partial void OnBatteryTempChanged();
    partial void OnControllerTempChanging(System.Nullable<decimal> value);
    partial void OnControllerTempChanged();
    partial void OnReserve2Changing(System.Nullable<decimal> value);
    partial void OnReserve2Changed();
    partial void OnBatterySOCChanging(System.Nullable<decimal> value);
    partial void OnBatterySOCChanged();
    partial void OnMaximumInputVoltageOfPVOfDayChanging(System.Nullable<decimal> value);
    partial void OnMaximumInputVoltageOfPVOfDayChanged();
    partial void OnMinimumInputVoltageOfPVOfDayChanging(System.Nullable<decimal> value);
    partial void OnMinimumInputVoltageOfPVOfDayChanged();
    partial void OnMaximumBatteryVoltageOfDayChanging(System.Nullable<decimal> value);
    partial void OnMaximumBatteryVoltageOfDayChanged();
    partial void OnMinimumBatteryVoltageOfDayChanging(System.Nullable<decimal> value);
    partial void OnMinimumBatteryVoltageOfDayChanged();
    partial void OnTotalPowerConsumptionOfDayLChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerConsumptionOfDayLChanged();
    partial void OnTotalPowerConsumptionOfDayHChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerConsumptionOfDayHChanged();
    partial void OnTotalPowerConsumptionOfMonthLChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerConsumptionOfMonthLChanged();
    partial void OnTotalPowerConsumptionOfMonthHChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerConsumptionOfMonthHChanged();
    partial void OnTotalPowerConsumptionOfYearLChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerConsumptionOfYearLChanged();
    partial void OnTotalPowerConsumptionOfYearHChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerConsumptionOfYearHChanged();
    partial void OnTotalPowerConsumptionLChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerConsumptionLChanged();
    partial void OnTotalPowerConsumptionHChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerConsumptionHChanged();
    partial void OnTotalPowerGenerationOfDayLChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerGenerationOfDayLChanged();
    partial void OnTotalPowerGenerationOfDayHChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerGenerationOfDayHChanged();
    partial void OnTotalPowerGenerationOfMonthLChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerGenerationOfMonthLChanged();
    partial void OnTotalPowerGenerationOfMonthHChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerGenerationOfMonthHChanged();
    partial void OnTotalPowerGenerationOfYearLChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerGenerationOfYearLChanged();
    partial void OnTotalPowerGenerationOfYearHChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerGenerationOfYearHChanged();
    partial void OnTotalPowerGenerationLChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerGenerationLChanged();
    partial void OnTotalPowerGenerationHChanging(System.Nullable<decimal> value);
    partial void OnTotalPowerGenerationHChanged();
    partial void OninsertDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OninsertDateTimeChanged();
    #endregion
		
		public DeviceHistory()
		{
			this._Device = default(EntityRef<Device>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceNumber", DbType="Int NOT NULL")]
		public int deviceNumber
		{
			get
			{
				return this._deviceNumber;
			}
			set
			{
				if ((this._deviceNumber != value))
				{
					this.OndeviceNumberChanging(value);
					this.SendPropertyChanging();
					this._deviceNumber = value;
					this.SendPropertyChanged("deviceNumber");
					this.OndeviceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceId", DbType="Int NOT NULL")]
		public int deviceId
		{
			get
			{
				return this._deviceId;
			}
			set
			{
				if ((this._deviceId != value))
				{
					if (this._Device.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndeviceIdChanging(value);
					this.SendPropertyChanging();
					this._deviceId = value;
					this.SendPropertyChanged("deviceId");
					this.OndeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVVoltage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PVVoltage
		{
			get
			{
				return this._PVVoltage;
			}
			set
			{
				if ((this._PVVoltage != value))
				{
					this.OnPVVoltageChanging(value);
					this.SendPropertyChanging();
					this._PVVoltage = value;
					this.SendPropertyChanged("PVVoltage");
					this.OnPVVoltageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVCurrent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PVCurrent
		{
			get
			{
				return this._PVCurrent;
			}
			set
			{
				if ((this._PVCurrent != value))
				{
					this.OnPVCurrentChanging(value);
					this.SendPropertyChanging();
					this._PVCurrent = value;
					this.SendPropertyChanged("PVCurrent");
					this.OnPVCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVPowerL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PVPowerL
		{
			get
			{
				return this._PVPowerL;
			}
			set
			{
				if ((this._PVPowerL != value))
				{
					this.OnPVPowerLChanging(value);
					this.SendPropertyChanging();
					this._PVPowerL = value;
					this.SendPropertyChanged("PVPowerL");
					this.OnPVPowerLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVPowerH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PVPowerH
		{
			get
			{
				return this._PVPowerH;
			}
			set
			{
				if ((this._PVPowerH != value))
				{
					this.OnPVPowerHChanging(value);
					this.SendPropertyChanging();
					this._PVPowerH = value;
					this.SendPropertyChanged("PVPowerH");
					this.OnPVPowerHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAVoltage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BAVoltage
		{
			get
			{
				return this._BAVoltage;
			}
			set
			{
				if ((this._BAVoltage != value))
				{
					this.OnBAVoltageChanging(value);
					this.SendPropertyChanging();
					this._BAVoltage = value;
					this.SendPropertyChanged("BAVoltage");
					this.OnBAVoltageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BACurrent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BACurrent
		{
			get
			{
				return this._BACurrent;
			}
			set
			{
				if ((this._BACurrent != value))
				{
					this.OnBACurrentChanging(value);
					this.SendPropertyChanging();
					this._BACurrent = value;
					this.SendPropertyChanged("BACurrent");
					this.OnBACurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reserve", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Reserve
		{
			get
			{
				return this._Reserve;
			}
			set
			{
				if ((this._Reserve != value))
				{
					this.OnReserveChanging(value);
					this.SendPropertyChanging();
					this._Reserve = value;
					this.SendPropertyChanged("Reserve");
					this.OnReserveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reserve1", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Reserve1
		{
			get
			{
				return this._Reserve1;
			}
			set
			{
				if ((this._Reserve1 != value))
				{
					this.OnReserve1Changing(value);
					this.SendPropertyChanging();
					this._Reserve1 = value;
					this.SendPropertyChanged("Reserve1");
					this.OnReserve1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACVoltage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ACVoltage
		{
			get
			{
				return this._ACVoltage;
			}
			set
			{
				if ((this._ACVoltage != value))
				{
					this.OnACVoltageChanging(value);
					this.SendPropertyChanging();
					this._ACVoltage = value;
					this.SendPropertyChanged("ACVoltage");
					this.OnACVoltageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCurrent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ACCurrent
		{
			get
			{
				return this._ACCurrent;
			}
			set
			{
				if ((this._ACCurrent != value))
				{
					this.OnACCurrentChanging(value);
					this.SendPropertyChanging();
					this._ACCurrent = value;
					this.SendPropertyChanged("ACCurrent");
					this.OnACCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACPowerL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ACPowerL
		{
			get
			{
				return this._ACPowerL;
			}
			set
			{
				if ((this._ACPowerL != value))
				{
					this.OnACPowerLChanging(value);
					this.SendPropertyChanging();
					this._ACPowerL = value;
					this.SendPropertyChanged("ACPowerL");
					this.OnACPowerLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACPowerH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ACPowerH
		{
			get
			{
				return this._ACPowerH;
			}
			set
			{
				if ((this._ACPowerH != value))
				{
					this.OnACPowerHChanging(value);
					this.SendPropertyChanging();
					this._ACPowerH = value;
					this.SendPropertyChanged("ACPowerH");
					this.OnACPowerHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEDLoadVoltage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LEDLoadVoltage
		{
			get
			{
				return this._LEDLoadVoltage;
			}
			set
			{
				if ((this._LEDLoadVoltage != value))
				{
					this.OnLEDLoadVoltageChanging(value);
					this.SendPropertyChanging();
					this._LEDLoadVoltage = value;
					this.SendPropertyChanged("LEDLoadVoltage");
					this.OnLEDLoadVoltageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEDLoadCurrent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LEDLoadCurrent
		{
			get
			{
				return this._LEDLoadCurrent;
			}
			set
			{
				if ((this._LEDLoadCurrent != value))
				{
					this.OnLEDLoadCurrentChanging(value);
					this.SendPropertyChanging();
					this._LEDLoadCurrent = value;
					this.SendPropertyChanged("LEDLoadCurrent");
					this.OnLEDLoadCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEDLoadPowerL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LEDLoadPowerL
		{
			get
			{
				return this._LEDLoadPowerL;
			}
			set
			{
				if ((this._LEDLoadPowerL != value))
				{
					this.OnLEDLoadPowerLChanging(value);
					this.SendPropertyChanging();
					this._LEDLoadPowerL = value;
					this.SendPropertyChanged("LEDLoadPowerL");
					this.OnLEDLoadPowerLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEDLoadPowerH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LEDLoadPowerH
		{
			get
			{
				return this._LEDLoadPowerH;
			}
			set
			{
				if ((this._LEDLoadPowerH != value))
				{
					this.OnLEDLoadPowerHChanging(value);
					this.SendPropertyChanging();
					this._LEDLoadPowerH = value;
					this.SendPropertyChanged("LEDLoadPowerH");
					this.OnLEDLoadPowerHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Load1Voltage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Load1Voltage
		{
			get
			{
				return this._Load1Voltage;
			}
			set
			{
				if ((this._Load1Voltage != value))
				{
					this.OnLoad1VoltageChanging(value);
					this.SendPropertyChanging();
					this._Load1Voltage = value;
					this.SendPropertyChanged("Load1Voltage");
					this.OnLoad1VoltageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Load1Current", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Load1Current
		{
			get
			{
				return this._Load1Current;
			}
			set
			{
				if ((this._Load1Current != value))
				{
					this.OnLoad1CurrentChanging(value);
					this.SendPropertyChanging();
					this._Load1Current = value;
					this.SendPropertyChanged("Load1Current");
					this.OnLoad1CurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Load1PowerL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Load1PowerL
		{
			get
			{
				return this._Load1PowerL;
			}
			set
			{
				if ((this._Load1PowerL != value))
				{
					this.OnLoad1PowerLChanging(value);
					this.SendPropertyChanging();
					this._Load1PowerL = value;
					this.SendPropertyChanged("Load1PowerL");
					this.OnLoad1PowerLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Load1PowerH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Load1PowerH
		{
			get
			{
				return this._Load1PowerH;
			}
			set
			{
				if ((this._Load1PowerH != value))
				{
					this.OnLoad1PowerHChanging(value);
					this.SendPropertyChanging();
					this._Load1PowerH = value;
					this.SendPropertyChanged("Load1PowerH");
					this.OnLoad1PowerHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Load2Voltage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Load2Voltage
		{
			get
			{
				return this._Load2Voltage;
			}
			set
			{
				if ((this._Load2Voltage != value))
				{
					this.OnLoad2VoltageChanging(value);
					this.SendPropertyChanging();
					this._Load2Voltage = value;
					this.SendPropertyChanged("Load2Voltage");
					this.OnLoad2VoltageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Load2Current", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Load2Current
		{
			get
			{
				return this._Load2Current;
			}
			set
			{
				if ((this._Load2Current != value))
				{
					this.OnLoad2CurrentChanging(value);
					this.SendPropertyChanging();
					this._Load2Current = value;
					this.SendPropertyChanged("Load2Current");
					this.OnLoad2CurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Load2PowerL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Load2PowerL
		{
			get
			{
				return this._Load2PowerL;
			}
			set
			{
				if ((this._Load2PowerL != value))
				{
					this.OnLoad2PowerLChanging(value);
					this.SendPropertyChanging();
					this._Load2PowerL = value;
					this.SendPropertyChanged("Load2PowerL");
					this.OnLoad2PowerLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Load2PowerH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Load2PowerH
		{
			get
			{
				return this._Load2PowerH;
			}
			set
			{
				if ((this._Load2PowerH != value))
				{
					this.OnLoad2PowerHChanging(value);
					this.SendPropertyChanging();
					this._Load2PowerH = value;
					this.SendPropertyChanged("Load2PowerH");
					this.OnLoad2PowerHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Load3Voltage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Load3Voltage
		{
			get
			{
				return this._Load3Voltage;
			}
			set
			{
				if ((this._Load3Voltage != value))
				{
					this.OnLoad3VoltageChanging(value);
					this.SendPropertyChanging();
					this._Load3Voltage = value;
					this.SendPropertyChanged("Load3Voltage");
					this.OnLoad3VoltageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Load3Current", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Load3Current
		{
			get
			{
				return this._Load3Current;
			}
			set
			{
				if ((this._Load3Current != value))
				{
					this.OnLoad3CurrentChanging(value);
					this.SendPropertyChanging();
					this._Load3Current = value;
					this.SendPropertyChanged("Load3Current");
					this.OnLoad3CurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Load3PowerL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Load3PowerL
		{
			get
			{
				return this._Load3PowerL;
			}
			set
			{
				if ((this._Load3PowerL != value))
				{
					this.OnLoad3PowerLChanging(value);
					this.SendPropertyChanging();
					this._Load3PowerL = value;
					this.SendPropertyChanged("Load3PowerL");
					this.OnLoad3PowerLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Load3PowerH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Load3PowerH
		{
			get
			{
				return this._Load3PowerH;
			}
			set
			{
				if ((this._Load3PowerH != value))
				{
					this.OnLoad3PowerHChanging(value);
					this.SendPropertyChanging();
					this._Load3PowerH = value;
					this.SendPropertyChanged("Load3PowerH");
					this.OnLoad3PowerHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatteryTemp", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BatteryTemp
		{
			get
			{
				return this._BatteryTemp;
			}
			set
			{
				if ((this._BatteryTemp != value))
				{
					this.OnBatteryTempChanging(value);
					this.SendPropertyChanging();
					this._BatteryTemp = value;
					this.SendPropertyChanged("BatteryTemp");
					this.OnBatteryTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControllerTemp", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ControllerTemp
		{
			get
			{
				return this._ControllerTemp;
			}
			set
			{
				if ((this._ControllerTemp != value))
				{
					this.OnControllerTempChanging(value);
					this.SendPropertyChanging();
					this._ControllerTemp = value;
					this.SendPropertyChanged("ControllerTemp");
					this.OnControllerTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reserve2", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Reserve2
		{
			get
			{
				return this._Reserve2;
			}
			set
			{
				if ((this._Reserve2 != value))
				{
					this.OnReserve2Changing(value);
					this.SendPropertyChanging();
					this._Reserve2 = value;
					this.SendPropertyChanged("Reserve2");
					this.OnReserve2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatterySOC", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BatterySOC
		{
			get
			{
				return this._BatterySOC;
			}
			set
			{
				if ((this._BatterySOC != value))
				{
					this.OnBatterySOCChanging(value);
					this.SendPropertyChanging();
					this._BatterySOC = value;
					this.SendPropertyChanged("BatterySOC");
					this.OnBatterySOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumInputVoltageOfPVOfDay", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaximumInputVoltageOfPVOfDay
		{
			get
			{
				return this._MaximumInputVoltageOfPVOfDay;
			}
			set
			{
				if ((this._MaximumInputVoltageOfPVOfDay != value))
				{
					this.OnMaximumInputVoltageOfPVOfDayChanging(value);
					this.SendPropertyChanging();
					this._MaximumInputVoltageOfPVOfDay = value;
					this.SendPropertyChanged("MaximumInputVoltageOfPVOfDay");
					this.OnMaximumInputVoltageOfPVOfDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumInputVoltageOfPVOfDay", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MinimumInputVoltageOfPVOfDay
		{
			get
			{
				return this._MinimumInputVoltageOfPVOfDay;
			}
			set
			{
				if ((this._MinimumInputVoltageOfPVOfDay != value))
				{
					this.OnMinimumInputVoltageOfPVOfDayChanging(value);
					this.SendPropertyChanging();
					this._MinimumInputVoltageOfPVOfDay = value;
					this.SendPropertyChanged("MinimumInputVoltageOfPVOfDay");
					this.OnMinimumInputVoltageOfPVOfDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumBatteryVoltageOfDay", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaximumBatteryVoltageOfDay
		{
			get
			{
				return this._MaximumBatteryVoltageOfDay;
			}
			set
			{
				if ((this._MaximumBatteryVoltageOfDay != value))
				{
					this.OnMaximumBatteryVoltageOfDayChanging(value);
					this.SendPropertyChanging();
					this._MaximumBatteryVoltageOfDay = value;
					this.SendPropertyChanged("MaximumBatteryVoltageOfDay");
					this.OnMaximumBatteryVoltageOfDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumBatteryVoltageOfDay", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MinimumBatteryVoltageOfDay
		{
			get
			{
				return this._MinimumBatteryVoltageOfDay;
			}
			set
			{
				if ((this._MinimumBatteryVoltageOfDay != value))
				{
					this.OnMinimumBatteryVoltageOfDayChanging(value);
					this.SendPropertyChanging();
					this._MinimumBatteryVoltageOfDay = value;
					this.SendPropertyChanged("MinimumBatteryVoltageOfDay");
					this.OnMinimumBatteryVoltageOfDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerConsumptionOfDayL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerConsumptionOfDayL
		{
			get
			{
				return this._TotalPowerConsumptionOfDayL;
			}
			set
			{
				if ((this._TotalPowerConsumptionOfDayL != value))
				{
					this.OnTotalPowerConsumptionOfDayLChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerConsumptionOfDayL = value;
					this.SendPropertyChanged("TotalPowerConsumptionOfDayL");
					this.OnTotalPowerConsumptionOfDayLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerConsumptionOfDayH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerConsumptionOfDayH
		{
			get
			{
				return this._TotalPowerConsumptionOfDayH;
			}
			set
			{
				if ((this._TotalPowerConsumptionOfDayH != value))
				{
					this.OnTotalPowerConsumptionOfDayHChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerConsumptionOfDayH = value;
					this.SendPropertyChanged("TotalPowerConsumptionOfDayH");
					this.OnTotalPowerConsumptionOfDayHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerConsumptionOfMonthL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerConsumptionOfMonthL
		{
			get
			{
				return this._TotalPowerConsumptionOfMonthL;
			}
			set
			{
				if ((this._TotalPowerConsumptionOfMonthL != value))
				{
					this.OnTotalPowerConsumptionOfMonthLChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerConsumptionOfMonthL = value;
					this.SendPropertyChanged("TotalPowerConsumptionOfMonthL");
					this.OnTotalPowerConsumptionOfMonthLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerConsumptionOfMonthH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerConsumptionOfMonthH
		{
			get
			{
				return this._TotalPowerConsumptionOfMonthH;
			}
			set
			{
				if ((this._TotalPowerConsumptionOfMonthH != value))
				{
					this.OnTotalPowerConsumptionOfMonthHChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerConsumptionOfMonthH = value;
					this.SendPropertyChanged("TotalPowerConsumptionOfMonthH");
					this.OnTotalPowerConsumptionOfMonthHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerConsumptionOfYearL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerConsumptionOfYearL
		{
			get
			{
				return this._TotalPowerConsumptionOfYearL;
			}
			set
			{
				if ((this._TotalPowerConsumptionOfYearL != value))
				{
					this.OnTotalPowerConsumptionOfYearLChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerConsumptionOfYearL = value;
					this.SendPropertyChanged("TotalPowerConsumptionOfYearL");
					this.OnTotalPowerConsumptionOfYearLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerConsumptionOfYearH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerConsumptionOfYearH
		{
			get
			{
				return this._TotalPowerConsumptionOfYearH;
			}
			set
			{
				if ((this._TotalPowerConsumptionOfYearH != value))
				{
					this.OnTotalPowerConsumptionOfYearHChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerConsumptionOfYearH = value;
					this.SendPropertyChanged("TotalPowerConsumptionOfYearH");
					this.OnTotalPowerConsumptionOfYearHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerConsumptionL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerConsumptionL
		{
			get
			{
				return this._TotalPowerConsumptionL;
			}
			set
			{
				if ((this._TotalPowerConsumptionL != value))
				{
					this.OnTotalPowerConsumptionLChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerConsumptionL = value;
					this.SendPropertyChanged("TotalPowerConsumptionL");
					this.OnTotalPowerConsumptionLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerConsumptionH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerConsumptionH
		{
			get
			{
				return this._TotalPowerConsumptionH;
			}
			set
			{
				if ((this._TotalPowerConsumptionH != value))
				{
					this.OnTotalPowerConsumptionHChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerConsumptionH = value;
					this.SendPropertyChanged("TotalPowerConsumptionH");
					this.OnTotalPowerConsumptionHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerGenerationOfDayL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerGenerationOfDayL
		{
			get
			{
				return this._TotalPowerGenerationOfDayL;
			}
			set
			{
				if ((this._TotalPowerGenerationOfDayL != value))
				{
					this.OnTotalPowerGenerationOfDayLChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerGenerationOfDayL = value;
					this.SendPropertyChanged("TotalPowerGenerationOfDayL");
					this.OnTotalPowerGenerationOfDayLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerGenerationOfDayH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerGenerationOfDayH
		{
			get
			{
				return this._TotalPowerGenerationOfDayH;
			}
			set
			{
				if ((this._TotalPowerGenerationOfDayH != value))
				{
					this.OnTotalPowerGenerationOfDayHChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerGenerationOfDayH = value;
					this.SendPropertyChanged("TotalPowerGenerationOfDayH");
					this.OnTotalPowerGenerationOfDayHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerGenerationOfMonthL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerGenerationOfMonthL
		{
			get
			{
				return this._TotalPowerGenerationOfMonthL;
			}
			set
			{
				if ((this._TotalPowerGenerationOfMonthL != value))
				{
					this.OnTotalPowerGenerationOfMonthLChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerGenerationOfMonthL = value;
					this.SendPropertyChanged("TotalPowerGenerationOfMonthL");
					this.OnTotalPowerGenerationOfMonthLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerGenerationOfMonthH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerGenerationOfMonthH
		{
			get
			{
				return this._TotalPowerGenerationOfMonthH;
			}
			set
			{
				if ((this._TotalPowerGenerationOfMonthH != value))
				{
					this.OnTotalPowerGenerationOfMonthHChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerGenerationOfMonthH = value;
					this.SendPropertyChanged("TotalPowerGenerationOfMonthH");
					this.OnTotalPowerGenerationOfMonthHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerGenerationOfYearL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerGenerationOfYearL
		{
			get
			{
				return this._TotalPowerGenerationOfYearL;
			}
			set
			{
				if ((this._TotalPowerGenerationOfYearL != value))
				{
					this.OnTotalPowerGenerationOfYearLChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerGenerationOfYearL = value;
					this.SendPropertyChanged("TotalPowerGenerationOfYearL");
					this.OnTotalPowerGenerationOfYearLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerGenerationOfYearH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerGenerationOfYearH
		{
			get
			{
				return this._TotalPowerGenerationOfYearH;
			}
			set
			{
				if ((this._TotalPowerGenerationOfYearH != value))
				{
					this.OnTotalPowerGenerationOfYearHChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerGenerationOfYearH = value;
					this.SendPropertyChanged("TotalPowerGenerationOfYearH");
					this.OnTotalPowerGenerationOfYearHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerGenerationL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerGenerationL
		{
			get
			{
				return this._TotalPowerGenerationL;
			}
			set
			{
				if ((this._TotalPowerGenerationL != value))
				{
					this.OnTotalPowerGenerationLChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerGenerationL = value;
					this.SendPropertyChanged("TotalPowerGenerationL");
					this.OnTotalPowerGenerationLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPowerGenerationH", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPowerGenerationH
		{
			get
			{
				return this._TotalPowerGenerationH;
			}
			set
			{
				if ((this._TotalPowerGenerationH != value))
				{
					this.OnTotalPowerGenerationHChanging(value);
					this.SendPropertyChanging();
					this._TotalPowerGenerationH = value;
					this.SendPropertyChanged("TotalPowerGenerationH");
					this.OnTotalPowerGenerationHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insertDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> insertDateTime
		{
			get
			{
				return this._insertDateTime;
			}
			set
			{
				if ((this._insertDateTime != value))
				{
					this.OninsertDateTimeChanging(value);
					this.SendPropertyChanging();
					this._insertDateTime = value;
					this.SendPropertyChanged("insertDateTime");
					this.OninsertDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_DeviceHistory", Storage="_Device", ThisKey="deviceId", OtherKey="id", IsForeignKey=true)]
		public Device Device
		{
			get
			{
				return this._Device.Entity;
			}
			set
			{
				Device previousValue = this._Device.Entity;
				if (((previousValue != value) 
							|| (this._Device.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Device.Entity = null;
						previousValue.DeviceHistories.Remove(this);
					}
					this._Device.Entity = value;
					if ((value != null))
					{
						value.DeviceHistories.Add(this);
						this._deviceId = value.id;
					}
					else
					{
						this._deviceId = default(int);
					}
					this.SendPropertyChanged("Device");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
